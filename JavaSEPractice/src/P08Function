/**
* @author Elvinsys
* @version 2019年5月29日 下午2:53:11
* @Description：JavaSE――关于方法的例程
*	
*	
*/

/*
 * 	例程编号：
 * 	描述：
 * 	说明：
 */
//例程
public class Demo{
	public static void main(String[] args) {
		System.out.println("这只是一个例程模板");
	}
}

/*
 * 	例程编号：053
 * 	描述：
 * 		两个数求和
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int a = 11;
		int b = 14;
		System.out.println("a+b="+myAdd(a,b));//a+b=25
	}
	public static int myAdd(int a, int b) {
		return a+b;
	}
}

/*
 * 	例程编号：054
 * 	描述：
 * 		比较两个数中的最大值
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int a = 11;
		int b = 14;
		bigger(a,b);
	}
	
	public static void bigger(int a, int b) {
		if(a>b) {
			System.out.println("a和b比较后，a更大，其值为："+a);
		} else if (a==b) {
			System.out.println("a和b的值都是"+a);
		} else {
			System.out.println("a和b比较后，b更大，其值为："+b);
		}
	}
}

/*
 * 	例程编号：055
 * 	描述：
 * 		比较两个数是否相同
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int a = 11;
		int b = 14;
		myEqul(a,b);
	}
	
	public static void myEqul(int a, int b) {
		if(a == b) {
			System.out.println("a和b相等，其值为："+a);
		} else {
			System.out.println("a和b不相等，a值是："+a+"，b值是："+b);
		}
	}
}

/*
 * 	例程编号：056
 * 	描述：
 * 		求三个数中的最大值
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int a = 11;
		int b = 14;
		int c = 94;
		System.out.println("三个数的最大值是："+getBiggerIn3(a,b,c));
	}
	
	public static int getBiggerIn3(int a, int b, int c) {
		return a>b?(a>c?a:c):(b>c?b:c);
	}
}

/*
 * 	例程编号：057
 * 	描述：
 * 		输出m行n列的星型
 * 	说明：
 * 		
 */
//例程

import java.util.Scanner;

public class Demo{
	public static void main(String[] args) {
		int m = 0;
		int n = 0;
		System.out.print("m行n列的星型，m=");
		Scanner sc = new Scanner(System.in);
		m = sc.nextInt();
		System.out.print("n=");
		n = sc.nextInt();
		star(m,n);
		sc.close();
	}
	
	public static void star(int m, int n) {
		for(int i = 0;i < m; i++) {
			for (int j = 0; j < n; j++) {
				System.out.print('*');
			}
			System.out.println("");
		}
	}
}

/*
 * 	例程编号：058
 * 	描述：
 * 		输出N x N 乘法表
 * 	说明：
 * 		
 */
//例程

import java.util.Scanner;

public class Demo{
	public static void main(String[] args) {
		int temp = 0;
		Scanner sc = new Scanner(System.in);
		System.out.println("N x N 乘法表，输入，N = ");
		temp = sc.nextInt();
		mult(temp);
		sc.close();
	}
	public static void mult(int n) {
		for(int i = 1; i <= n; i++) {
			for(int j = 1; j <= i; j++) {
				System.out.print(j+" x "+i+"= "+j*i+'\t');
			}
			System.out.println("");
		}
	}
}

/*
 * 	例程编号：059
 * 	描述：
 * 		方法重载：两个整数求最大值，三个整数求最大值，四个整数求最大值
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int num1 = 11;
		int num2 = 22;
		int num3 = 33;
		int num4 = 44;
		System.out.println("num1和num2比较，最大值是："+getBigger(num1,num2));
		System.out.println("num1、num2和num3比较，最大值是"+getBigger(num1,num2,num3));
		System.out.println("num1、num2、num3和num4比较，最大值是"+getBigger(num1,num2,num3,num4));
	}
	public static int getBigger(int a, int b) {
		return a>b?a:b;
	}
	public static int getBigger(int a, int b, int c) {
		return a>b?(a>c?a:c):(b>c?b:c);
	}
	public static int getBigger(int a, int b, int c, int d) {
		return a>b?(a>c?(a>d?a:d):(c>d?c:d)):(b>c?(b>d?b:d):(c>d?c:d));
	}
}



























