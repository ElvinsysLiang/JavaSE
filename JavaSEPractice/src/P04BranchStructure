/**
* @author Elvinsys
* @version 2019年5月16日 下午15:58:25
* @Description：JavaSE――关于选择结构的例程
* 	程序包含三种结构：顺序结构、选择结构、循环结构，这里是选择结构的例程
* 	选择结构一般有两种，if...else...，以及switch
*/

/*
 * 	例程编号：
 * 	描述：
 * 	说明：
 */
//例程
public class Demo{
	public static void main(String[] args) {
		System.out.println("这只是一个例程模板");
	}
}

/*
 * 	例程编号：020
 * 	描述：
 * 		if语句的3种格式
 * 	说明：
 * 		1）格式一用于单个判断
 * 		2）格式二用于两个判断
 * 		3）格式三用于做多个判断
 * 		
 * 		注意事项：
 * 		A:比较表达式无论简单还是复杂，结果都是boolean型
 * 		B:if语句控制的语句体如果是一条语句，可以省略大括号，如果是多条，则不能省略
 * 			建议永远不要省略
 * 		C:有左边大括号就没有分号，有分号就没有左边大括号
 * 		D:else后面如果没有if嵌套，则没有表达式
 * 		E:三种if格式，只要有一个语句体被执行，其他语句体将不会执行
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int n1 = 3;
		int n2 = 4;
		int n3 = 5;
		//格式一
		if(n1>0) {
			System.out.println("n1>0");//n1>0
		}
		System.out.println("----------");
		
		//格式二
		if(n1>n2) {
			System.out.println("n1>n2");
		} else {
			System.out.println("n1<=n2");//此条会被执行//n1<=n2
		}
		System.out.println("----------");
		
		//格式三
		if (n1 == 1) {
			System.out.println("n1==1");
		} else if (n1 == 2) {
			System.out.println("n1 == 2");
		} else if (n1 == 3) {
			System.out.println("n1 == 3");//此举会被执行//n1==3
		} else {
			System.out.println("n1 !=1 !=2 !=3");
		}
	}
}

/*
 * 	例程编号：021
 * 	描述：
 * 		if语句的6个练习：
 * 		A:比较两个数是否相等
 * 		B:获取两个数的最大值
 * 		C:获取三个数的最大值（if语句的嵌套使用）
 * 		D:根据成绩输出对应的等级
 * 		E:根据月份输出对应的季节
 * 		F:根据x计算对应y的值并输出
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		int n1 = 3;
		int n2 = 4;
		int n3 = 5;
		int max = 0;
		//A:比较两个数是否相等
		if (n1 == n2) {
			System.out.println("n1 == n2");
		} else {
			System.out.println("n1 != n2");//此举会被执行//n1 != n2
		}
		System.out.println("----------");//隔开
		
		//B:获取两个数的最大值
		//方法1：用if语句
		if(n1 > n2) {
			System.out.println("n1比n2大，n1的值是："+n1);
		} else {
			System.out.println("n2比n1大，n2的值是："+n2);//此句会被执行//但有漏洞，如果n1==n2呢？
		}
		//上面代码可以改为：
		System.out.println("更改了代码");
		if (n1 > n2) {
			System.out.println("n1比n2大，n1的值是："+n1);
		} else if (n1 == n2) {
			System.out.println("n1==n2，两个一样大，值是："+n1);
		} else {
			System.out.println("n2比n1大，n2的值是："+n2);
		}
		//方法2，用三目运算符，但由于无法直接SystemOut，所以要改变一下方式
		max = (n1>n2)?n1:n2;
		System.out.println("最大值是："+max);
		System.out.println("----------");//隔开
		
		//C:获取三个数的最大值（if语句的嵌套使用）
		//方法1，用if语句
		if(n1>n2) {
			if(n1>n3) {
				max = n1;
			} else {
				max = n3;
			}
		} else {
			if(n2>n3) {
				max = n2;
			} else {
				max = n3;
			}
		}
		System.out.println("#用if语句：最大值是："+max);
		//方法2，用三目运算符
		max = (n1>n2)?(n1>n3?n1:n3):(n2>n3?n2:n3);
		System.out.println("#用三目运算符：最大值是："+max);
		System.out.println("----------");//隔开
		
		//D:根据成绩输出对应的等级
		int score = 87;
		if ((score>=90)&&(score<=100)) {
			System.out.println("优秀");
		} else if ((score>=80)&&(score<90)) {
			System.out.println("不错");//此句会被执行//不错
		} else if ((score>=70)&&(score<80)) {
			System.out.println("还行");
		} else if ((score>=60)&&(score<70)) {
			System.out.println("勉强及格");
		} else if ((score>=0)&&(score<60)) {
			System.out.println("不及格了");
		} else {
			System.out.println("数据有误");
		}
		System.out.println("----------");//隔开
		
		//E:根据月份输出对应的季节
		/*
		 * 	春季	3,4,5月
		 * 	夏季	6,7,8月
		 * 	秋季	9,10,11月
		 * 	冬季	12,1,2月
		 * */
		n1 = 1;
		if((n1 == 3) || (n1 == 4) || (n1 == 5)) {
			System.out.println("该月份是春季");
		} else if((n1 == 6) || (n1 == 7) || (n1 == 8)) {
			System.out.println("该月份是夏季");
		} else if((n1 == 9) || (n1 == 10) || (n1 == 11)) {
			System.out.println("该月份是秋季");
		} else if((n1 == 12) || (n1 == 1) || (n1 == 2)) {
			System.out.println("该月份是冬季");
		} else {
			System.out.println("没有这个月份");
		}
		System.out.println("----------");//隔开
		
		//F:根据x计算对应y的值并输出
		/*
		 * 	x>=3	y = 2x + 1
		 * 	-1<=x<3	y = 2x
		 * 	x<-1	y = 2x - 1
		 * */
		n1 = 4;
		n2 = 0;
		if(n1 >= 3) {
			n2 = 2 * n1 + 1;
		} else if((n1 >= -1) && (n1 < 3)) {
			n2 = 2 * n1;
		} else {
			n2 = 2 * n1 - 1;
		}
		System.out.println("y="+n2);
		System.out.println("----------");//隔开
		
	}
}

/*
 * 	例程编号：022
 * 	描述：
 * 		switch语句的演示，键盘录入1~7中的任意一个整数，输出星期几
 * 	说明：
 * 		
 */
//例程

import java.util.Scanner;

public class Demo{
	public static void main(String[] args) {
		int n1 = 0;
		Scanner sc = new Scanner(System.in);
		System.out.println("请输入1~7中的一个数：");
		n1 = sc.nextInt();
		while((n1 > 7)||(n1 < 1)) {
			System.out.println("输入的数据有误，请重新输入");
			System.out.println("请输入1~7中的一个数：");
			n1 = sc.nextInt();
		}
		switch (n1) {
			case 1:
				System.out.println("星期一");
				break;
			case 2:
				System.out.println("星期二");
				break;
			case 3:
				System.out.println("星期三");
				break;
			case 4:
				System.out.println("星期四");
				break;
			case 5:
				System.out.println("星期五");
				break;
			case 6:
				System.out.println("星期六");
				break;
			case 7:
				System.out.println("星期日");
				break;
		}
	}
}

/*
 * 	例程编号：023
 * 	描述：
 * 		switch语句的演示，根据月份显示季节
 * 	说明：
 * 		
 */
//例程

import java.util.Scanner;

public class Demo{
	public static void main(String[] args) {
		int n1 = 0;
		Scanner sc = new Scanner(System.in);
		System.out.println("现在是几月份啊？：");
		n1 = sc.nextInt();
		while((n1 > 12)||(n1 < 1)) {
			System.out.println("没有这个月份，请重新输入");
			System.out.println("请输入1~12中的一个数：");
			n1 = sc.nextInt();
		}
		switch (n1) {
			case 3:
			case 4:
			case 5:
				System.out.println("现在是春季");
				break;
			case 6:
			case 7:
			case 8:
				System.out.println("现在是夏季");
				break;
			case 9:
			case 10:
			case 11:
				System.out.println("现在是秋季");
				break;
			case 12:
			case 1:
			case 2:
				System.out.println("现在是冬季");
				break;
			default:
				System.out.println("没有这个月份");
		}
	}
}

/*
 * 	例程编号：024
 * 	描述：
 * 		面试题：switch语句中的选择值，可以是byte，long，String吗？
 * 		答案：可以是byte，不可以是long，String要在JDK1.7或以上版本
 * 	说明：
 * 		switch语句中的选择值可以是byte，short，int，char
 * 		在JDK1.5后可以是枚举型，在JDK1.7后可以是String
 */
//例程

public class Demo{
	public static void main(String[] args) {
	}
}


/*
 * 	例程编号：025
 * 	描述：
 * 		跳转语句（break和continue）的用法。
 * 		面试题，补齐代码
 * 		1）输出2次hello
 * 		2）输出7次hello
 * 		3）输出13次hello
 * 	说明：
 * 		
 */
//例程

public class Demo{
	public static void main(String[] args) {
		//1)输出2次hello
		for(int i = 1; i <=10; i++) {
			if(i%3==0) {
				//补齐代码
				break;
			}
			System.out.println("hello");
		}
		
		//2）输出7次hello
		for(int i = 0; i <10; i++) {
			if(i%3==0) {
				//补齐代码
				continue;
			}
			System.out.println("hello");
		}
		
		//3）输出13次hello
		for(int i = 0; i <10; i++) {
			if(i%3==0) {
				//补齐代码
				System.out.println("hello");
			}
			System.out.println("hello");
		}
	}
}















